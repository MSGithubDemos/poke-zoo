{"version":3,"sources":["features/landing/assets/images/pikachu_phone.jpg","features/landing/assets/images/pikachu.jpg","authSlice.js","components/Navbar.js","features/landing/components/ModalSignup.js","features/landing/components/ModalLogin.js","features/landing/Landing.js","features/home/collectionSlice.js","features/home/UserInfo.js","features/home/components/CollectionCard.js","features/home/Collection.js","features/home/Home.js","features/explore/pokemonCardsSlice.js","features/explore/SearchPokemon.js","features/explore/components/pokeTypeColor.js","features/explore/components/PokeDetailsUI.js","features/explore/components/PokemonCard.js","features/explore/PokemonCards.js","features/explore/Explore.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","authSlice","createSlice","name","initialState","isUserLoggedIn","username","reducers","login","state","action","user","payload","alert","logout","window","localStorage","removeItem","signup","selectorAuth","auth","actions","Navbar","authState","useSelector","dispatch","useDispatch","to","onClick","ModalSignup","props","signupModalBool","setSignupModalBool","useState","setUsername","password","setPassword","history","useHistory","from","useLocation","pathname","onSubmit","e","preventDefault","a","axios","post","response","token","headers","data","setItem","msg","message","trySignup","replace","value","onChange","target","placeholder","type","ModalLogin","loginModalBool","setLoginModalBool","tryLogin","ButtonBase","styled","button","Landing","imageUrl","innerWidth","desktop_wallpaper","mobile_phone_wallpaper","css","collectionSlice","collectionList","setInitialCollection","create","push","collectionId","collectionName","pokemons","addPoke","collectionListIndex","findIndex","x","find","c","includes","pokemon","remove","collectionIdToRemove","collectionIdRemoveIndex","col","id","splice","edit","collectionIdToEdit","editedName","editedPokemonList","pokemonList","collectionIdEditIndex","selectorCollection","collection","add","UserInfo","dateTime","Date","collections","currentDate","toDateString","length","CollectionCard","collectionObj","setCollectionName","isEdit","setIsEdit","setPokemonList","handleRemoveCollection","getItem","console","log","removeCollection","handleEditToggle","handleSave","editCollection","newCollectionName","map","poke","key","pokeName","newPokemonList","filter","handleRemovePokemon","Collection","collectionState","useEffect","getState","get","newCollection","uuidv4","pokeCollection","Home","URL","pokemonCardsSlice","filteredPokemonList","arr","val","existingPokeIds","some","arrVal","search","searchTerm","filteredList","toLowerCase","selectorPokemon","selectorFilteredPokemon","SearchPokemon","setSearchTerm","PokeTypeColorElement","color","generatePokeTypeColor","PokeDetailsUI","keyAttribute","PokemonCard","currentCollection","setCurrentCollection","pokemonId","pokemonName","pokemonType","pokemonHeight","pokemonWeight","pokemonBaseExperience","pokemonSprite","alt","src","pokeId","pokeObj","PokemonCards","results","url","responseDetails","tempDetails","species","baseExperience","base_experience","height","weight","types","sprites","front_default","Explore","ProtectedRoute","Component","component","rest","render","location","AuthRoute","App","autoLoginResponse","exact","path","configureStore","reducer","collectionReducer","pokemonCardsReducer","Boolean","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6e1f45e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pikachu_phone.f70615ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.486d6ae6.jpg\";","import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nconst initialState = {\n  isUserLoggedIn: false,\n  username: \"\",\n}\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    login: (state, action) => {\n      const user = action.payload\n\n      if (!user) return alert(\"Login failed. Incorrect username or password.\")\n\n      state.username = user.username\n      state.isUserLoggedIn = true\n    },\n    logout: (state, action) => {\n      state.username = \"\"\n      state.isUserLoggedIn = false\n      window.localStorage.removeItem(\"token\")\n    },\n    signup: (state, action) => {\n      const user = action.payload\n\n      if (!user) return alert(\"Sign up failed. Please try again.\")\n\n      state.username = user.username\n      state.isUserLoggedIn = true\n    },\n  },\n})\n\n// window.localStorage.setItem(\n//   \"token\",\n//   autoLoginResponse.headers[\"auth-token\"]\n// )\n\nexport const tryAutoLogin = () => {\n  return async dispatch => {\n    try {\n      const autoLoginResponse = await axios.get(\"/api/auth/autologin\", {\n        headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n      })\n\n      if (autoLoginResponse) {\n        const user = {\n          token: autoLoginResponse.headers[\"auth-token\"],\n          username: autoLoginResponse.data.username,\n        }\n\n        dispatch(login(user))\n      }\n    } catch (e) {\n      console.log(\"\")\n    }\n  }\n}\n\nexport const tryLogin = (username, password) => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        username: username,\n        password: password,\n      })\n\n      const user = {\n        token: response.headers[\"auth-token\"],\n        username: response.data.username,\n      }\n\n      window.localStorage.setItem(\"token\", response.headers[\"auth-token\"])\n\n      dispatch(login(user))\n    } catch (e) {\n      alert(\"Incorrect Username/Password.\")\n    }\n  }\n}\n\nexport const trySignup = (username, password) => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"/api/auth/signup\", {\n        username: username,\n        password: password,\n      })\n\n      const user = {\n        token: response.headers[\"auth-token\"],\n        username: response.data.username,\n      }\n\n      window.localStorage.setItem(\"token\", response.headers[\"auth-token\"])\n\n      dispatch(signup(user))\n    } catch (e) {\n      alert(e.response.data.msg[0].message)\n    }\n  }\n}\n\nexport const selectorAuth = state => state.auth\nexport const { login, logout, signup } = authSlice.actions\nexport default authSlice.reducer\n","// This is the Navbar component. It is present on all webpages.\n\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { selectorAuth, logout } from \"../authSlice\"\n\nconst Navbar = () => {\n  const authState = useSelector(selectorAuth)\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <div>\n      <nav tw=\"flex flex-row p-2 md:p-4 justify-between items-center text-gray-200 bg-purple-700 sm:text-lg\">\n        <NavLink tw=\"hover:text-white hover:font-semibold\" to=\"/home\">\n          <h3> POKEDEX</h3>\n        </NavLink>\n        {authState.isUserLoggedIn && (\n          <ul tw=\"flex flex-row\">\n            <li tw=\"mx-1 md:mx-2\">\n              <NavLink tw=\"hover:text-white hover:font-semibold\" to=\"/home\">\n                home\n              </NavLink>\n            </li>\n            <li tw=\"mx-1 md:mx-2\">\n              <NavLink tw=\"hover:text-white hover:font-semibold\" to=\"/explore\">\n                explore\n              </NavLink>\n            </li>\n            <li tw=\"mx-1 md:mx-2\">\n              <button\n                onClick={handleLogout}\n                tw=\"p-1 text-sm rounded bg-gray-200 text-gray-900 hover:bg-gray-800 hover:text-white hover:font-semibold\"\n              >\n                logout\n              </button>\n            </li>\n          </ul>\n        )}\n      </nav>\n    </div>\n  )\n}\n\nexport default Navbar\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React, { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { trySignup } from \"../../../authSlice\"\n\nconst ModalSignup = props => {\n  const { signupModalBool, setSignupModalBool } = props\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const dispatch = useDispatch()\n  let history = useHistory()\n  let location = useLocation()\n\n  let { from } = location.state || { from: { pathname: \"/\" } }\n\n  const attemptSignup = e => {\n    e.preventDefault()\n    dispatch(trySignup(username, password))\n    history.replace(from)\n  }\n\n  return (\n    <div tw=\"flex flex-col text-center h-full w-64 bg-gray-200 text-gray-900 rounded-lg shadow-lg p-2 md:p-4 lg:p-6\">\n      <div tw=\"flex flex-row justify-between\">\n        <p tw=\"text-lg\">Sign up</p>\n        <button\n          tw=\"text-sm\"\n          onClick={() => setSignupModalBool(!signupModalBool)}\n        >\n          close\n        </button>\n      </div>\n      <div tw=\"flex flex-col justify-around my-1\">\n        <form onSubmit={attemptSignup} tw=\"\">\n          <input\n            tw=\"my-1\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            placeholder=\"username\"\n          />\n          <input\n            tw=\"my-1\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n            placeholder=\"password\"\n          />\n          <button\n            type=\"submit\"\n            tw=\"my-1 p-1 rounded bg-gray-800 text-gray-100 hover:bg-gray-900\"\n          >\n            sign up\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default ModalSignup\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React, { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { tryLogin } from \"../../../authSlice\"\n\nconst ModalLogin = props => {\n  const { loginModalBool, setLoginModalBool } = props\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const dispatch = useDispatch()\n  let history = useHistory()\n  let location = useLocation()\n\n  let { from } = location.state || { from: { pathname: \"/\" } }\n\n  const attemptLogin = e => {\n    e.preventDefault()\n    dispatch(tryLogin(username, password))\n    history.replace(from)\n  }\n\n  return (\n    <div tw=\"flex flex-col text-center h-full w-64 bg-gray-200 text-gray-900 rounded-lg shadow-lg p-2 md:p-4 lg:p-6\">\n      <div tw=\"flex flex-row justify-between\">\n        <p tw=\"text-lg\">Login</p>\n        <button tw=\"text-sm\" onClick={() => setLoginModalBool(!loginModalBool)}>\n          close\n        </button>\n      </div>\n      <div tw=\"flex flex-col justify-around my-1\">\n        <form onSubmit={attemptLogin} tw=\"\">\n          <input\n            tw=\"my-1\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            placeholder=\"username\"\n          />\n          <input\n            tw=\"my-1\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n            placeholder=\"password\"\n          />\n          <button\n            type=\"submit\"\n            tw=\"my-1 p-1 rounded bg-gray-800 text-gray-100 hover:bg-gray-900\"\n          >\n            log in\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default ModalLogin\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport tw from \"twin.macro\"\n\nimport React, { useState, useEffect } from \"react\"\n\nimport mobile_phone_wallpaper from \"./assets/images/pikachu_phone.jpg\"\nimport desktop_wallpaper from \"./assets/images/pikachu.jpg\"\n\nimport ModalSignup from \"./components/ModalSignup\"\nimport ModalLogin from \"./components/ModalLogin\"\n\nconst ButtonBase = styled.button(\n  tw`hover:text-gray-900 hover:bg-gray-100 border border-white rounded font-semibold text-lg p-2 m-2 md:text-xl md:px-2 md:px-4 lg:text-2xl lg:py-4 lg:px-6`\n)\n\nconst Landing = () => {\n  const [loginModalBool, setLoginModalBool] = useState(false)\n  const [signupModalBool, setSignupModalBool] = useState(false)\n\n  const imageUrl =\n    window.innerWidth >= 650 ? desktop_wallpaper : mobile_phone_wallpaper\n\n  return (\n    <div\n      css={[\n        tw`flex flex-1 flex-col items-center justify-around h-screen w-full`,\n        css`\n          background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n            url(${imageUrl});\n          ${tw`bg-auto bg-cover bg-center bg-no-repeat`}\n        `,\n      ]}\n    >\n      <div>\n        <h1 tw=\"text-white text-4xl md:text-4xl lg:text-6xl font-bold\">\n          Pokedex\n        </h1>\n      </div>\n      <div tw=\"flex flex-col text-white\">\n        {signupModalBool === true ? (\n          <ModalSignup\n            signupModalBool={signupModalBool}\n            setSignupModalBool={setSignupModalBool}\n          />\n        ) : loginModalBool === true ? (\n          <ModalLogin\n            loginModalBool={loginModalBool}\n            setLoginModalBool={setLoginModalBool}\n          />\n        ) : (\n          <div>\n            <ButtonBase onClick={() => setLoginModalBool(!loginModalBool)}>\n              log in\n            </ButtonBase>\n            <ButtonBase onClick={() => setSignupModalBool(!signupModalBool)}>\n              sign up\n            </ButtonBase>\n          </div>\n        )}\n      </div>\n\n      <div></div>\n    </div>\n  )\n}\n\nexport default Landing\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nconst initialState = {\n  collectionList: [],\n}\n\nexport const collectionSlice = createSlice({\n  name: \"collection\",\n  initialState: initialState,\n  reducers: {\n    setInitialCollection: (state, action) => {\n      state.collectionList = action.payload\n    },\n\n    // create a collection only if the same name does not already exists.\n    create: (state, action) => {\n      if (action.payload !== \"\") {\n        state.collectionList.push({\n          collectionId: action.payload.collectionId,\n          collectionName: action.payload.collectionName,\n          pokemons: [],\n        })\n      } else {\n        alert(\"Collection name cannot be blank.\")\n      }\n    },\n    // add pokemon to a collection\n    addPoke: (state, action) => {\n      // get the index of the selected collection in the collectionList array using the collection ID.\n      const collectionListIndex = state.collectionList.findIndex(\n        x => x.collectionId === action.payload.collectionId\n      )\n\n      const collectionName = state.collectionList.find(\n        c => c.collectionId === action.payload.collectionId\n      ).name\n\n      // If collection exists, then push the pokemon in it.\n      if (collectionListIndex !== -1) {\n        if (\n          // If a pokemon with the same name already exists, do not put into the list.\n          // Instead, alert the user.\n          state.collectionList[collectionListIndex].pokemons.includes(\n            action.payload.pokemon\n          )\n        ) {\n          alert(\n            `${action.payload.pokemon} already exists in collection \"${collectionName}\".`\n          )\n        } else {\n          state.collectionList[collectionListIndex].pokemons.push(\n            action.payload.pokemon\n          )\n        }\n      }\n    },\n\n    // remove a collection.\n    remove: (state, action) => {\n      const collectionIdToRemove = action.payload.collectionId\n\n      const collectionIdRemoveIndex = state.collectionList.findIndex(\n        col => col.id === collectionIdToRemove\n      )\n\n      if (collectionIdRemoveIndex !== -1) {\n        state.collectionList.splice(collectionIdRemoveIndex, 1)\n      }\n    },\n    // Edit collection name and pokemon in it.\n    edit: (state, action) => {\n      const collectionIdToEdit = action.payload.collectionId\n      const editedName = action.payload.collectionName\n      const editedPokemonList = action.payload.pokemonList\n\n      const collectionIdEditIndex = state.collectionList.findIndex(\n        col => col.collectionId === collectionIdToEdit\n      )\n\n      if (collectionIdEditIndex !== -1) {\n        state.collectionList[collectionIdEditIndex].collectionName = editedName\n        state.collectionList[collectionIdEditIndex].pokemons = editedPokemonList\n      }\n    },\n  },\n})\n\n// fetch all collections\nexport const fetchCollection = username => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.get(`api/collection/display/${username}`, {\n        headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n      })\n      dispatch(setInitialCollection(response.data))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\n// create a collection - async\nexport const createCollection = collectionObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\n        \"api/collection/create\",\n        collectionObj,\n        { headers: { \"auth-token\": window.localStorage.getItem(\"token\") } }\n      )\n\n      const collectionName =\n        response.data.pokeCollection[response.data.pokeCollection.length - 1]\n          .collectionName\n\n      const collectionId =\n        response.data.pokeCollection[response.data.pokeCollection.length - 1]\n          .collectionId\n      dispatch(\n        create({ collectionId: collectionId, collectionName: collectionName })\n      )\n    } catch (e) {\n      alert(e.response.data.msg)\n      console.log(e)\n    }\n  }\n}\n\n// remove a collection - async\nexport const removeCollection = collectionObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\n        \"api/collection/delete\",\n        collectionObj,\n        { headers: { \"auth-token\": window.localStorage.getItem(\"token\") } }\n      )\n      dispatch(remove({ collectionId: response.collectionId }))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\n// add pokemon to a collection - async\nexport const addPokemon = pokeObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"api/collection/addpoke\", pokeObj, {\n        headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n      })\n      dispatch(addPoke(response.data))\n    } catch (e) {\n      alert(e.response.data.msg)\n      console.log(e)\n    }\n  }\n}\n\n// edit collection -  async\nexport const editCollection = collectionObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\n        \"api/collection/editcollection\",\n        collectionObj,\n        {\n          headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n        }\n      )\n      dispatch(edit(response.data))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nexport const selectorCollection = state => state.collection.collectionList\nexport const {\n  setInitialCollection,\n  create,\n  add,\n  remove,\n  edit,\n  addPoke,\n} = collectionSlice.actions\nexport default collectionSlice.reducer\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\n\nimport { selectorCollection } from \"./collectionSlice\"\nimport { selectorAuth } from \"../../authSlice\"\n\nconst UserInfo = () => {\n  const authState = useSelector(selectorAuth)\n\n  const dateTime = new Date()\n  const collections = useSelector(selectorCollection)\n  const currentDate = dateTime.toDateString()\n\n  return (\n    <div tw=\"flex flex-row justify-around items-center bg-blue-800 py-8 px-2 md:py-10 md:px-4\">\n      <section tw=\"w-1/3 text-center border border-yellow-400 text-gray-100 rounded-full p-4 mr-1\">\n        <h3 tw=\"font-semibold text-xl md:text-2xl lg:text-3xl\">\n          Hello {authState.username}!\n        </h3>\n        <p> {currentDate} </p>\n      </section>\n      <section tw=\"w-2/3 text-left text-white p-4 rounded ml-1 sm:text-lg md:text-xl lg:text-2xl md:flex md:flex-row md:justify-center\">\n        <p tw=\"m-1 p-2\">\n          <span tw=\"border border-yellow-400 text-gray-100 px-4 py-2 m-1 rounded-full\">\n            XXX\n          </span>\n          coins\n        </p>\n        <p tw=\"m-1 p-2\">\n          <span tw=\"border border-yellow-400 text-gray-100 px-4 py-2 m-1 rounded-full\">\n            {collections.length}\n          </span>\n          collections\n        </p>\n      </section>\n    </div>\n  )\n}\n\nexport default UserInfo\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport React, { useState } from \"react\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { removeCollection, editCollection } from \"../collectionSlice\"\n\nimport { selectorAuth } from \"../../../authSlice\"\n\nconst CollectionCard = props => {\n  // Get the collectionObj using props for displaying pokemon in\n  // collection cards.\n  const { collectionObj } = props\n\n  const dispatch = useDispatch()\n  const authState = useSelector(selectorAuth)\n\n  // Initialise state for renaming collection.\n  const [collectionName, setCollectionName] = useState(\n    collectionObj.collectionName\n  )\n  // Edit state is initialised with a \"no\"\n  const [isEdit, setIsEdit] = useState(\"no\")\n  // Initialise state for removing pokemon from a collection.\n  const [pokemonList, setPokemonList] = useState(collectionObj.pokemons)\n\n  // Remove collection from the store.\n  const handleRemoveCollection = collectionId => {\n    dispatch(\n      removeCollection({\n        username: authState.username,\n        collectionId: collectionId,\n      })\n    )\n  }\n\n  // Toggle edit functionality of a card.\n  const handleEditToggle = () => {\n    if (isEdit === \"no\") {\n      setIsEdit(\"yes\")\n      setCollectionName(collectionObj.collectionName)\n    } else {\n      setIsEdit(\"no\")\n      setCollectionName(collectionObj.collectionName)\n      setPokemonList(collectionObj.pokemons)\n    }\n  }\n\n  // Remove pokemon from a collection.\n  const handleRemovePokemon = pokeName => {\n    const newPokemonList = pokemonList.filter(poke => poke !== pokeName)\n    setPokemonList(newPokemonList)\n  }\n\n  // Rename collection.\n  const handleCollectionNameChange = e => {\n    setCollectionName(e.target.value)\n  }\n\n  // Save the changes made to a card.\n  // This involves renaming a collection and editing the pokemon list.\n  const handleSave = collectionId => {\n    dispatch(\n      editCollection({\n        collectionId: collectionId,\n        username: authState.username,\n        newCollectionName: collectionName,\n        editedPokemonList: pokemonList,\n      })\n    )\n    setIsEdit(\"no\")\n  }\n\n  return (\n    <div tw=\"flex flex-col bg-blue-800 hover:bg-blue-900 h-full shadow-lg text-gray-100 rounded-lg overflow-auto m-1\">\n      {/* conditional render based on edit button. */}\n      {isEdit === \"no\" ? (\n        // if edit mode is off, then display the the collections as is.\n        <section>\n          <div tw=\"flex flex-row justify-end py-1 px-2\">\n            <button\n              onClick={handleEditToggle}\n              tw=\"mx-1 p-1 rounded hover:text-white hover:font-semibold hover:p-1\"\n            >\n              edit\n            </button>\n            <button\n              onClick={() => handleRemoveCollection(collectionObj.collectionId)}\n              tw=\"mx-1 p-1 rounded hover:text-white hover:font-semibold hover:p-1\"\n            >\n              delete\n            </button>\n          </div>\n          <div tw=\"flex flex-row justify-around pt-4 pb-12 px-2\">\n            <div tw=\"my-auto text-xl md:text-lg\">\n              <h3 tw=\"bg-purple-600 whitespace-pre-line rounded px-4 py-2 md:p-2 text-center font-bold text-lg sm:text-xl md:text-lg\">\n                {collectionObj.collectionName}\n              </h3>\n            </div>\n            <div tw=\"w-2/3 my-auto text-center sm:text-lg md:text-base\">\n              <ul>\n                {collectionObj.pokemons.map(poke => (\n                  <li\n                    key={poke}\n                    tw=\"text-gray-900 font-semibold bg-gray-100 p-1 rounded m-1\"\n                  >\n                    {poke}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </section>\n      ) : (\n        // if edit mode is on, display an <input /> element in the place of collection name and\n        // display \"x\" buttons to delete pokemon from the collection.\n        // Also display a \"cancel\" and \"save\" button.\n        <div>\n          <section>\n            <div tw=\"flex flex-row justify-between py-1 px-2\">\n              <button\n                onClick={handleEditToggle}\n                tw=\"mx-1 p-1 rounded hover:text-white hover:font-semibold hover:p-1\"\n              >\n                cancel\n              </button>\n              <button\n                onClick={() => handleSave(collectionObj.collectionId)}\n                tw=\"mx-1 p-1 rounded hover:text-white hover:font-semibold hover:p-1\"\n              >\n                save\n              </button>\n            </div>\n            <div tw=\"flex flex-row justify-around pt-4 pb-8 px-2\">\n              <div tw=\"my-auto text-xl md:text-lg\">\n                <input\n                  value={collectionName}\n                  onChange={handleCollectionNameChange}\n                  tw=\"bg-purple-600 whitespace-pre-line rounded px-1 py-4 md:p-2 text-center font-bold text-lg sm:text-xl md:text-lg\"\n                />\n              </div>\n              <div tw=\"w-2/3 my-auto text-center sm:text-lg md:text-base\">\n                <ul>\n                  {pokemonList.map(poke => (\n                    <li\n                      key={poke}\n                      tw=\"flex flex-row justify-between items-center text-gray-900 mx-4 font-semibold bg-gray-100 p-1 my-1 rounded\"\n                    >\n                      <p>{poke}</p>\n                      <button\n                        onClick={() => handleRemovePokemon(poke)}\n                        tw=\"font-semibold bg-red-800 m-1 px-2 py-1 rounded-full text-gray-100\"\n                      >\n                        x\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </section>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default CollectionCard\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nimport React, { useState, useEffect } from \"react\"\n\nimport CollectionCard from \"./components/CollectionCard\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  createCollection,\n  fetchCollection,\n  selectorCollection,\n} from \"./collectionSlice\"\nimport { selectorAuth } from \"../../authSlice\"\n\nconst Collection = () => {\n  const [collectionName, setCollectionName] = useState(\"\")\n  const dispatch = useDispatch()\n  const collectionState = useSelector(selectorCollection)\n  const authState = useSelector(selectorAuth)\n\n  // Fetch collection by dispatching the action with username.\n  useEffect(() => {\n    dispatch(fetchCollection(authState.username))\n  }, [dispatch])\n\n  const handleCollectionCreation = e => {\n    e.preventDefault()\n    const newCollection = {\n      collectionId: uuidv4(),\n      collectionName: collectionName,\n      username: authState.username,\n      pokemons: [],\n    }\n\n    dispatch(createCollection(newCollection))\n    setCollectionName(\"\")\n  }\n\n  return (\n    <div tw=\"p-2 md:p-4\">\n      <section tw=\"text-base md:text-lg lg:text-xl\">\n        <h3 tw=\"mx-1\"> Your Collection </h3>\n        <form onSubmit={handleCollectionCreation}>\n          <input\n            tw=\"rounded border border-purple-700 m-1\"\n            value={collectionName}\n            onChange={e => setCollectionName(e.target.value)}\n          />\n          <button\n            tw=\"bg-purple-700 hover:bg-purple-800 text-gray-200 hover:text-white rounded p-1 m-1\"\n            type=\"submit\"\n          >\n            create collection\n          </button>\n        </form>\n      </section>\n      <section tw=\"md:grid md:grid-cols-2 lg:grid-cols-3 md:gap-2\">\n        {collectionState.map(col => (\n          <CollectionCard key={col.collectionId} collectionObj={col} />\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default Collection\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\n\nimport UserInfo from \"./UserInfo\"\nimport Collection from \"./Collection\"\n\nconst Home = () => {\n  return (\n    <div tw=\"flex flex-1 flex-col h-screen bg-blue-100\">\n      <UserInfo />\n      <Collection />\n    </div>\n  )\n}\n\nexport default Home\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\n// A constant that determines how many pokemon are fetched from the API.\nexport const NUMBER_OF_POKEMON = 25\n\n// URL for the get request.\nconst URL = `https://pokeapi.co/api/v2/pokemon?limit=${NUMBER_OF_POKEMON}`\n\n// We initialize 2 arrays. pokemonList is where we store all the pokemon fetched.\n// filteredPokemonList is where we store pokemon that match the search filter.\nconst initialState = {\n  pokemonList: [],\n  filteredPokemonList: [],\n}\n\n// A function that checks if a pokemon exists in an array.\nconst pokemonExists = (arr, val) => {\n  return arr.some(arrVal => val === arrVal)\n}\n\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    // Add a pokemon to the array. Pokemon is added only if it\n    // does not already exist in the state.\n    add: (state, action) => {\n      const existingPokeIds = state.pokemonList.map(poke => poke.id)\n      if (!pokemonExists(existingPokeIds, action.payload.id)) {\n        state.pokemonList.push(action.payload)\n      }\n    },\n    // Search for a pokemon in the pokemonList state. The matches are stored in the\n    // filteredPokemonList state.\n    search: (state, action) => {\n      const searchTerm = action.payload.searchTerm\n\n      // If the search term is empty, then pokemonList is\n      // returned.\n      if (searchTerm === \"\") {\n        state.filteredPokemonList = state.pokemonList\n      }\n\n      // Convert the searchTerm and existing pokemon to lowercase while searhcing.\n      const filteredList = state.pokemonList.filter(poke =>\n        poke.name.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n\n      // if searchTerm is not empty and no match is found, return \"xxx\".\n      // Else return the filtered list.\n      if (searchTerm !== \"\" && filteredList.length === 0) {\n        state.filteredPokemonList = [\"xxx\"]\n      } else {\n        state.filteredPokemonList = filteredList\n      }\n    },\n  },\n})\n\nexport const { add, search } = pokemonCardsSlice.actions\n\n// Async function to fetch pokemon.\n// We only fetch pokemon if they already don't exist in the state.\n// We do this so that a request is not made everytime we go to the explore page.\nexport const fetchPokemonNameUrl = () => {\n  return async (dispatch, getState) => {\n    // get state\n    const state = getState()\n\n    try {\n      // if length of pokemonList is not equal to NUMBER_OF_POKEMON, then fetch\n      // pokemon.\n      if (state.pokemon.pokemonList.length !== NUMBER_OF_POKEMON) {\n        const response = await axios.get(URL)\n        const data = response.data.results\n\n        // create a temp object for every pokemon fetched, extract all relevant\n        // details into it, and push it into the pokemonList state.\n        data.map(async poke => {\n          const responseDetails = await axios.get(poke.url)\n\n          let tempDetails = {\n            id: responseDetails.data.id,\n            name: responseDetails.data.species.name,\n            baseExperience: responseDetails.data.base_experience,\n            height: responseDetails.data.height,\n            weight: responseDetails.data.weight,\n            type: responseDetails.data.types[0].type.name,\n            sprites: responseDetails.data.sprites.front_default,\n          }\n\n          dispatch(add(tempDetails))\n        })\n      }\n    } catch (e) {\n      console.log(\"Could not fetch data.\")\n    }\n  }\n}\n\nexport const selectorPokemon = state => state.pokemon.pokemonList\nexport const selectorFilteredPokemon = state =>\n  state.pokemon.filteredPokemonList\n\nexport default pokemonCardsSlice.reducer\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React, { useState } from \"react\"\n\nimport { useDispatch } from \"react-redux\"\nimport { search } from \"./pokemonCardsSlice\"\n\nconst SearchPokemon = () => {\n  const dispatch = useDispatch()\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  // dispatch search action.\n  const handleSearchTermChange = e => {\n    setSearchTerm(e.target.value)\n    dispatch(search({ searchTerm: e.target.value }))\n  }\n\n  return (\n    <div tw=\"flex flex-row bg-blue-800 py-8 px-2 md:py-10 md:px-4\">\n      <section tw=\"text-lg md:text-xl\">\n        <h3 tw=\"text-white\"> Search Pokemon </h3>\n        <form>\n          <input\n            tw=\"rounded\"\n            value={searchTerm}\n            onChange={handleSearchTermChange}\n          />\n        </form>\n      </section>\n    </div>\n  )\n}\n\nexport default SearchPokemon\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled/macro\"\n\n// generating colours like this because twin.macro doesn't\n// support passing colours as strings\nconst generatePokeTypeColor = color => {\n  switch (color) {\n    case \"normal\":\n      return tw`bg-orange-700`\n    case \"fighting\":\n      return tw`bg-red-800`\n    case \"flying\":\n      return tw`bg-purple-600`\n    case \"poison\":\n      return tw`bg-pink-800`\n    case \"ground\":\n      return tw`bg-yellow-600`\n    case \"rock\":\n      return tw`bg-yellow-800`\n    case \"bug\":\n      return tw`bg-green-600`\n    case \"ghost\":\n      return tw`bg-purple-900`\n    case \"steel\":\n      return tw`bg-gray-600`\n    case \"fire\":\n      return tw`bg-orange-500`\n    case \"water\":\n      return tw`bg-blue-500`\n    case \"grass\":\n      return tw`bg-green-800`\n    case \"electric\":\n      return tw`bg-yellow-500`\n    case \"psychic\":\n      return tw`bg-pink-600`\n    case \"ice\":\n      return tw`bg-blue-300`\n    case \"dragon\":\n      return tw`bg-purple-400`\n    case \"dark\":\n      return tw`bg-orange-900`\n    case \"fairy\":\n      return tw`bg-pink-300`\n    case \"unknown\":\n      return tw`bg-gray-500`\n    case \"shadow\":\n      return tw`bg-gray-700`\n    default:\n      return tw`bg-white`\n  }\n}\n\n// generate a styled p tag with dynamic background colour.\nconst PokeTypeColorElement = styled.p`\n  ${({ color }) => generatePokeTypeColor(color)}\n`\nexport default PokeTypeColorElement\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\n// A component to display the pokemon attributes.\nconst PokeDetailsUI = props => {\n  const { keyAttribute, val } = props\n  return (\n    <p tw=\"flex flex-row justify-between my-2 p-1 bg-gray-800 rounded\">\n      <span tw=\"font-semibold text-gray-100 p-1 mx-2 rounded\">\n        {keyAttribute}\n      </span>\n      <span tw=\"font-semibold bg-gray-200 self-stretch text-gray-900 p-1 rounded\">\n        {val}\n      </span>\n    </p>\n  )\n}\n\nexport default PokeDetailsUI\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled/macro\"\n\nimport PokeTypeColorElement from \"./pokeTypeColor\"\nimport PokeDetailsUI from \"./PokeDetailsUI\"\n\nimport { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { addPokemon, selectorCollection } from \"../../home/collectionSlice\"\nimport { selectorAuth } from \"../../../authSlice\"\n\nconst PokemonCard = props => {\n  // access the collection state.\n  const collectionState = useSelector(selectorCollection)\n  const authState = useSelector(selectorAuth)\n  const dispatch = useDispatch()\n\n  const [currentCollection, setCurrentCollection] = useState({\n    collectionId: \"\",\n    pokemon: \"\",\n  })\n\n  const handleChange = e => {\n    setCurrentCollection({\n      ...currentCollection,\n      collectionId: e.target.value,\n      pokemon: pokemonName,\n      username: authState.username,\n    })\n  }\n\n  const handleSubmit = (e, pokeId) => {\n    e.preventDefault()\n    dispatch(addPokemon(currentCollection))\n  }\n\n  // extract details to render a pokemonCard component.\n  const {\n    pokemonId,\n    pokemonName,\n    pokemonType,\n    pokemonHeight,\n    pokemonWeight,\n    pokemonBaseExperience,\n    pokemonSprite,\n  } = props\n\n  return (\n    <div tw=\"flex flex-row justify-around items-center bg-blue-800 p-2 rounded-lg overflow-x-auto\">\n      <div tw=\"flex flex-col flex-wrap w-1/3 m-1\">\n        <img\n          tw=\"object-contain transform sm:scale-125\"\n          alt={pokemonName}\n          src={pokemonSprite}\n        />\n        <p tw=\"bg-gray-100 text-gray-900 font-extrabold text-center whitespace-normal rounded p-1 m-1\">\n          {pokemonName}\n        </p>\n\n        <PokeTypeColorElement\n          tw=\"text-center text-white font-semibold text-center whitespace-normal rounded p-1 m-1\"\n          color={pokemonType}\n        >\n          {pokemonType}\n        </PokeTypeColorElement>\n      </div>\n      <div tw=\"flex flex-col items-center w-2/3\">\n        <div>\n          <PokeDetailsUI keyAttribute=\"height\" val={pokemonHeight} />\n          <PokeDetailsUI keyAttribute=\"weight\" val={pokemonWeight} />\n          <PokeDetailsUI keyAttribute=\"base-exp\" val={pokemonBaseExperience} />\n        </div>\n        <form onSubmit={handleSubmit}>\n          <select\n            value={currentCollection.collectionId}\n            onChange={handleChange}\n          >\n            <option value={\"NULL\"}>...</option>\n            {collectionState.map(collection => (\n              <option\n                key={`${collection.collectionId}-${pokemonId}`}\n                value={collection.collectionId}\n              >\n                {collection.collectionName}\n              </option>\n            ))}\n          </select>\n          <button\n            tw=\"rounded border border-white text-gray-100 hover:bg-gray-100 hover:font-semibold hover:text-gray-900 px-4 py-1 ml-2\"\n            type=\"submit\"\n          >\n            add\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonCard\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport PokemonCard from \"./components/PokemonCard\"\n\nimport { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  fetchPokemonNameUrl,\n  selectorFilteredPokemon,\n  selectorPokemon,\n} from \"./pokemonCardsSlice\"\n\nconst PokemonCards = () => {\n  const dispatch = useDispatch()\n  // A state array that contains all the pokemon fetched from the API.\n  const pokemonList = useSelector(selectorPokemon)\n  // A state array that contains an array of pokemon that match the search filter.\n  const filteredPokemonList = useSelector(selectorFilteredPokemon)\n\n  // Fetch pokemon by dispatching the action.\n  useEffect(() => {\n    dispatch(fetchPokemonNameUrl())\n  }, [dispatch])\n\n  return (\n    <div tw=\"p-2 md:p-4\">\n      <ul>\n        <div tw=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-2 md:gap-3 lg:gap-4\">\n          {/* If \"xxx\" is present in the 0th position of the state array, return \"No pokemon found.\" */}\n          {/* Else If \"xxx\" is not returned and the length of the state is 0, then return all the pokemon. */}\n          {/* Else return pokemon that match the search filter.*/}\n          {filteredPokemonList[0] === \"xxx\"\n            ? \"No Pokemon found.\"\n            : filteredPokemonList.length === 0\n            ? pokemonList.map(poke => (\n                <PokemonCard\n                  key={`key-${poke.id}`}\n                  pokemonId={poke.id}\n                  pokemonName={poke.name}\n                  pokemonType={poke.type}\n                  pokemonHeight={poke.height}\n                  pokemonWeight={poke.weight}\n                  pokemonBaseExperience={poke.baseExperience}\n                  pokemonSprite={poke.sprites}\n                />\n              ))\n            : filteredPokemonList.map(poke => (\n                <PokemonCard\n                  key={`key-${poke.id}`}\n                  pokemonId={poke.id}\n                  pokemonName={poke.name}\n                  pokemonType={poke.type}\n                  pokemonHeight={poke.height}\n                  pokemonWeight={poke.weight}\n                  pokemonBaseExperience={poke.baseExperience}\n                  pokemonSprite={poke.sprites}\n                />\n              ))}\n        </div>\n      </ul>\n    </div>\n  )\n}\n\nexport default PokemonCards\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\n\nimport SearchPokemon from \"./SearchPokemon\"\nimport PokemonCards from \"./PokemonCards\"\n\nconst Explore = () => {\n  return (\n    <div tw=\"flex flex-1 flex-col h-screen bg-blue-100\">\n      <SearchPokemon />\n      <PokemonCards />\n    </div>\n  )\n}\n\nexport default Explore\n","/** @jsx jsx */\r\n/** @jsxFrag React.Fragment */\r\nimport { jsx, css } from \"@emotion/core\"\r\nimport tw from \"twin.macro\"\r\nimport \"tailwindcss/dist/base.css\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useLocation,\r\n} from \"react-router-dom\"\r\n\r\nimport { selectorAuth, tryAutoLogin } from \"./authSlice\"\r\n\r\nimport React, { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport Navbar from \"./components/Navbar\"\r\nimport Landing from \"./features/landing/Landing\"\r\nimport Home from \"./features/home/Home\"\r\nimport Explore from \"./features/explore/Explore\"\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const authState = useSelector(selectorAuth)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (authState.isUserLoggedIn) {\r\n          return <Component {...props} />\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => {\r\n  const authState = useSelector(selectorAuth)\r\n\r\n  const location = useLocation()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!authState.isUserLoggedIn) {\r\n          return <Component {...props} />\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/home\",\r\n                state: {\r\n                  from: location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const authState = useSelector(selectorAuth)\r\n\r\n  useEffect(() => {\r\n    dispatch(tryAutoLogin())\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n      <div tw=\"flex flex-col bg-green-100 min-h-screen\">\r\n        <Navbar />\r\n        <Switch>\r\n          <AuthRoute exact path=\"/\" component={Landing} />\r\n          <ProtectedRoute path=\"/home\" component={Home} />\r\n          <ProtectedRoute path=\"/explore\" component={Explore} />\r\n          <Route path=\"*\" component={() => \"404 Not found.\"} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport collectionReducer from \"../features/home/collectionSlice\"\r\nimport pokemonCardsReducer from \"../features/explore/pokemonCardsSlice\"\r\nimport authSlice from \"../authSlice\"\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    collection: collectionReducer,\r\n    pokemon: pokemonCardsReducer,\r\n    auth: authSlice,\r\n  },\r\n})\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport store from \"./app/store\"\r\nimport { Provider } from \"react-redux\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}