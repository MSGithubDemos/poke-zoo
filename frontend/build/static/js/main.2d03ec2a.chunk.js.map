{"version":3,"sources":["features/landing/assets/images/pikachu_phone.jpg","features/landing/assets/images/pikachu.jpg","authSlice.js","components/Navbar.js","features/landing/components/ModalSignup.js","features/landing/components/ModalLogin.js","features/landing/Landing.js","features/home/collectionSlice.js","features/home/UserInfo.js","features/home/components/CollectionCard.js","features/home/Collection.js","features/home/Home.js","features/explore/pokemonCardsSlice.js","features/explore/SearchPokemon.js","features/explore/components/pokeTypeColor.js","features/explore/components/PokeFormForCollection.js","features/explore/components/PokeDetailsUI.js","features/explore/components/PokemonCard.js","features/explore/PokemonCards.js","features/explore/Explore.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","authSlice","createSlice","name","initialState","isUserLoggedIn","username","reducers","login","state","action","payload","password","logout","selectorAuth","auth","actions","Navbar","authState","useSelector","dispatch","useDispatch","to","onClick","ModalSignup","props","signupModalBool","setSignupModalBool","ModalLogin","loginModalBool","setLoginModalBool","useState","setUsername","setPassword","history","useHistory","onSubmit","e","preventDefault","push","value","onChange","target","placeholder","type","ButtonBase","styled","button","Landing","location","useLocation","imageUrl","window","innerWidth","desktop_wallpaper","mobile_phone_wallpaper","css","fromState","from","collectionId","collectionSlice","collectionList","create","find","cn","alert","id","pokemons","add","collectionListIndex","findIndex","x","collectionName","c","includes","pokemon","remove","collectionIdToRemove","collectionIdRemoveIndex","col","splice","edit","collectionIdToEdit","editedName","editedPokemonList","collectionIdEditIndex","selectorCollection","collection","UserInfo","dateTime","Date","collections","currentDate","toDateString","length","CollectionCard","collectionObj","setCollectionName","isEdit","setIsEdit","pokemonList","setPokemonList","handleEditToggle","map","poke","key","pokeName","newPokemonList","filter","handleRemovePokemon","Collection","Home","URL","pokemonCardsSlice","filteredPokemonList","arr","val","existingPokeIds","some","arrVal","search","searchTerm","filteredList","toLowerCase","selectorPokemon","selectorFilteredPokemon","SearchPokemon","setSearchTerm","PokeTypeColorElement","color","generatePokeTypeColor","PokeFormForCollection","pokemonId","addPokemonToCollection","pokemonCollectionInput","handlePokemonToCollection","clctn","Number","PokeDetailsUI","keyAttribute","PokemonCard","pokemonName","pokemonType","pokemonHeight","pokemonWeight","pokemonBaseExperience","pokemonSprite","setPokemonCollectionInput","alt","src","PokemonCards","useEffect","getState","a","axios","get","data","results","url","responseDetails","tempDetails","species","baseExperience","base_experience","height","weight","types","sprites","front_default","console","log","Explore","ProtectedRoute","Component","component","rest","render","pathname","App","exact","path","configureStore","reducer","collectionReducer","pokemonCardsReducer","Boolean","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d03ec2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pikachu_phone.f70615ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.486d6ae6.jpg\";","import { createSlice } from \"@reduxjs/toolkit\"\nimport { useHistory } from \"react-router-dom\"\n\nconst initialState = {\n  isUserLoggedIn: false,\n  username: \"\",\n}\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    login: (state, action) => {\n      const { username, password } = action.payload\n      if (username === \"test\" && password === \"test\") {\n        state.isUserLoggedIn = true\n        state.username = username\n      }\n    },\n    logout: state => {\n      state.isUserLoggedIn = false\n      state.username = \"\"\n    },\n  },\n})\n\nexport const selectorAuth = state => state.auth\nexport const { login, logout } = authSlice.actions\nexport default authSlice.reducer\n","// This is the Navbar component. It is present on all webpages.\n\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { selectorAuth, logout } from \"../authSlice\"\n\nconst Navbar = () => {\n  const authState = useSelector(selectorAuth)\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <div>\n      <nav tw=\"flex flex-row p-2 md:p-4 justify-between items-center text-gray-200 bg-purple-700 sm:text-lg\">\n        <NavLink tw=\"hover:text-white hover:font-semibold\" to=\"/home\">\n          <h3> POKEDEX</h3>\n        </NavLink>\n        {authState.isUserLoggedIn && (\n          <ul tw=\"flex flex-row\">\n            <li tw=\"mx-1 md:mx-2\">\n              <NavLink tw=\"hover:text-white hover:font-semibold\" to=\"/home\">\n                home\n              </NavLink>\n            </li>\n            <li tw=\"mx-1 md:mx-2\">\n              <NavLink tw=\"hover:text-white hover:font-semibold\" to=\"/explore\">\n                explore\n              </NavLink>\n            </li>\n            <li tw=\"mx-1 md:mx-2\">\n              <button\n                onClick={handleLogout}\n                tw=\"p-1 text-sm rounded bg-gray-200 text-gray-900 hover:bg-gray-800 hover:text-white hover:font-semibold\"\n              >\n                logout\n              </button>\n            </li>\n          </ul>\n        )}\n      </nav>\n    </div>\n  )\n}\n\nexport default Navbar\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\n\nconst ModalSignup = props => {\n  const { signupModalBool, setSignupModalBool } = props\n\n  return (\n    <div tw=\"flex flex-col text-center h-full w-64 bg-gray-200 text-gray-900 rounded-lg shadow-lg p-2 md:p-4 lg:p-6\">\n      <div tw=\"flex flex-row justify-between\">\n        <p tw=\"text-lg\">Sign up</p>\n        <button\n          tw=\"text-sm\"\n          onClick={() => setSignupModalBool(!signupModalBool)}\n        >\n          close\n        </button>\n      </div>\n      <div tw=\"flex flex-col justify-around my-1\">\n        <form tw=\"\">\n          <p tw=\"my-1\">\n            username\n            <input />\n          </p>\n          <p tw=\"my-1\">\n            password\n            <input />\n          </p>\n          <button tw=\"my-1 p-1 rounded bg-gray-800 text-gray-100 hover:bg-gray-900\">\n            sign up\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default ModalSignup\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React, { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { login } from \"../../../authSlice\"\n\nconst ModalLogin = props => {\n  const { loginModalBool, setLoginModalBool } = props\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const attemptLogin = e => {\n    e.preventDefault()\n    dispatch(login({ username, password }))\n    history.push(\"/home\")\n  }\n\n  return (\n    <div tw=\"flex flex-col text-center h-full w-64 bg-gray-200 text-gray-900 rounded-lg shadow-lg p-2 md:p-4 lg:p-6\">\n      <div tw=\"flex flex-row justify-between\">\n        <p tw=\"text-lg\">Login</p>\n        <button tw=\"text-sm\" onClick={() => setLoginModalBool(!loginModalBool)}>\n          close\n        </button>\n      </div>\n      <div tw=\"flex flex-col justify-around my-1\">\n        <form onSubmit={attemptLogin} tw=\"\">\n          <input\n            tw=\"my-1\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            placeholder=\"username\"\n          />\n          <input\n            tw=\"my-1\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n            placeholder=\"password\"\n          />\n          <button\n            type=\"submit\"\n            tw=\"my-1 p-1 rounded bg-gray-800 text-gray-100 hover:bg-gray-900\"\n          >\n            log in\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default ModalLogin\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport tw from \"twin.macro\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\"\n\nimport mobile_phone_wallpaper from \"./assets/images/pikachu_phone.jpg\"\nimport desktop_wallpaper from \"./assets/images/pikachu.jpg\"\n\nimport ModalSignup from \"./components/ModalSignup\"\nimport ModalLogin from \"./components/ModalLogin\"\n\nconst ButtonBase = styled.button(\n  tw`hover:text-gray-900 hover:bg-gray-100 border border-white rounded font-semibold text-lg p-2 m-2 md:text-xl md:px-2 md:px-4 lg:text-2xl lg:py-4 lg:px-6`\n)\n\nconst Landing = () => {\n  const [loginModalBool, setLoginModalBool] = useState(false)\n  const [signupModalBool, setSignupModalBool] = useState(false)\n\n  const location = useLocation()\n\n  const imageUrl =\n    window.innerWidth >= 650 ? desktop_wallpaper : mobile_phone_wallpaper\n\n  return (\n    <div\n      css={[\n        tw`flex flex-1 flex-col items-center justify-around h-screen w-full`,\n        css`\n          background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n            url(${imageUrl});\n          ${tw`bg-auto bg-cover bg-center bg-no-repeat`}\n        `,\n      ]}\n    >\n      <div>\n        <h1 tw=\"text-white text-4xl md:text-4xl lg:text-6xl font-bold\">\n          Pokedex\n        </h1>\n      </div>\n      <div tw=\"flex flex-col text-white\">\n        {signupModalBool === true ? (\n          <ModalSignup\n            fromState={location.state && location.state.from}\n            signupModalBool={signupModalBool}\n            setSignupModalBool={setSignupModalBool}\n          />\n        ) : loginModalBool === true ? (\n          <ModalLogin\n            fromState={location.state && location.state.from}\n            loginModalBool={loginModalBool}\n            setLoginModalBool={setLoginModalBool}\n          />\n        ) : (\n          <div>\n            <ButtonBase onClick={() => setLoginModalBool(!loginModalBool)}>\n              log in\n            </ButtonBase>\n            <ButtonBase onClick={() => setSignupModalBool(!signupModalBool)}>\n              sign up\n            </ButtonBase>\n          </div>\n        )}\n      </div>\n\n      <div></div>\n    </div>\n  )\n}\n\nexport default Landing\n","import { createSlice } from \"@reduxjs/toolkit\"\n\n// intialize a counter for collection id.\nlet collectionId = 1\n\nconst initialState = {\n  collectionList: [],\n}\n\nexport const collectionSlice = createSlice({\n  name: \"collection\",\n  initialState: initialState,\n  reducers: {\n    // create a collection only if the same name does not already exists.\n    create: (state, action) => {\n      if (action.payload !== \"\") {\n        const doesCollectionNameExist = state.collectionList.find(\n          cn => cn.name === action.payload\n        )\n\n        if (!doesCollectionNameExist) {\n          state.collectionList.push({\n            id: collectionId,\n            name: action.payload,\n            pokemons: [],\n          })\n          collectionId++\n        } else {\n          alert(\n            `Collection name \"${action.payload}\" already exists. Please choose another name.`\n          )\n        }\n      } else {\n        alert(\"Collection name cannot be blank.\")\n      }\n    },\n    // add pokemon to a collection\n    add: (state, action) => {\n      // get the index of the selected collection in the collectionList array using the collection ID.\n      const collectionListIndex = state.collectionList.findIndex(\n        x => x.id === action.payload.id\n      )\n\n      const collectionName = state.collectionList.find(\n        c => c.id === action.payload.id\n      ).name\n\n      // If collection exists, then push the pokemon in it.\n      if (collectionListIndex !== -1) {\n        if (\n          // If a pokemon with the same name already exists, do not put into the list.\n          // Instead, alert the user.\n          state.collectionList[collectionListIndex].pokemons.includes(\n            action.payload.pokemon\n          )\n        ) {\n          alert(\n            `${action.payload.pokemon} already exists in collection \"${collectionName}\".`\n          )\n        } else {\n          state.collectionList[collectionListIndex].pokemons.push(\n            action.payload.pokemon\n          )\n        }\n      }\n    },\n    // remove a collection.\n    remove: (state, action) => {\n      const collectionIdToRemove = action.payload.id\n\n      const collectionIdRemoveIndex = state.collectionList.findIndex(\n        col => col.id === collectionIdToRemove\n      )\n\n      if (collectionIdRemoveIndex !== -1) {\n        state.collectionList.splice(collectionIdRemoveIndex, 1)\n      }\n    },\n    // Edit collection name and pokemon in it.\n    edit: (state, action) => {\n      const collectionIdToEdit = action.payload.id\n      const editedName = action.payload.editedName\n      const editedPokemonList = action.payload.editedPokemonList\n\n      const collectionIdEditIndex = state.collectionList.findIndex(\n        col => col.id === collectionIdToEdit\n      )\n\n      if (collectionIdEditIndex !== -1) {\n        state.collectionList[collectionIdEditIndex].name = editedName\n        state.collectionList[collectionIdEditIndex].pokemons = editedPokemonList\n      }\n    },\n  },\n})\n\nexport const selectorCollection = state => state.collection.collectionList\nexport const { create, add, remove, edit } = collectionSlice.actions\nexport default collectionSlice.reducer\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\n\nimport { selectorCollection } from \"./collectionSlice\"\nimport { selectorAuth } from \"../../authSlice\"\n\nconst UserInfo = () => {\n  const authState = useSelector(selectorAuth)\n\n  const dateTime = new Date()\n  const collections = useSelector(selectorCollection)\n  const currentDate = dateTime.toDateString()\n\n  return (\n    <div tw=\"flex flex-row justify-around items-center bg-blue-800 py-8 px-2 md:py-10 md:px-4\">\n      <section tw=\"w-1/3 text-center border border-yellow-400 text-gray-100 rounded-full p-4 mr-1\">\n        <h3 tw=\"font-semibold text-xl md:text-2xl lg:text-3xl\">\n          Hello {authState.username}!\n        </h3>\n        <p> {currentDate} </p>\n      </section>\n      <section tw=\"w-2/3 text-left text-white p-4 rounded ml-1 sm:text-lg md:text-xl lg:text-2xl md:flex md:flex-row md:justify-center\">\n        <p tw=\"m-1 p-2\">\n          <span tw=\"border border-yellow-400 text-gray-100 px-4 py-2 m-1 rounded-full\">\n            XXX\n          </span>\n          coins\n        </p>\n        <p tw=\"m-1 p-2\">\n          <span tw=\"border border-yellow-400 text-gray-100 px-4 py-2 m-1 rounded-full\">\n            {collections.length}\n          </span>\n          collections\n        </p>\n      </section>\n    </div>\n  )\n}\n\nexport default UserInfo\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport React, { useState } from \"react\"\n\nimport { useDispatch } from \"react-redux\"\nimport { remove, edit } from \"../collectionSlice\"\n\nconst CollectionCard = props => {\n  // Get the collectionObj using props for displaying pokemon in\n  // collection cards.\n  const { collectionObj } = props\n  const dispatch = useDispatch()\n  // Initialise state for renaming collection.\n  const [collectionName, setCollectionName] = useState(collectionObj.name)\n  // Edit state is initialised with a \"no\"\n  const [isEdit, setIsEdit] = useState(\"no\")\n  // Initialise state for removing pokemon from a collection.\n  const [pokemonList, setPokemonList] = useState(collectionObj.pokemons)\n\n  // Remove collection from the store.\n  const handleRemoveCollection = collectionId => {\n    dispatch(remove({ id: collectionId }))\n  }\n\n  // Toggle edit functionality of a card.\n  const handleEditToggle = () => {\n    if (isEdit === \"no\") {\n      setIsEdit(\"yes\")\n      setCollectionName(collectionObj.name)\n    } else {\n      setIsEdit(\"no\")\n      setCollectionName(collectionObj.name)\n      setPokemonList(collectionObj.pokemons)\n    }\n  }\n\n  // Remove pokemon from a collection.\n  const handleRemovePokemon = pokeName => {\n    const newPokemonList = pokemonList.filter(poke => poke !== pokeName)\n    setPokemonList(newPokemonList)\n  }\n\n  // Rename collection.\n  const handleCollectionNameChange = e => {\n    setCollectionName(e.target.value)\n  }\n\n  // Save the changes made to a card.\n  // This involves renaming a collection and editing the pokemon list.\n  const handleSave = collectionId => {\n    dispatch(\n      edit({\n        id: collectionId,\n        editedName: collectionName,\n        editedPokemonList: pokemonList,\n      })\n    )\n    setIsEdit(\"no\")\n  }\n\n  return (\n    <div tw=\"flex flex-col bg-blue-800 hover:bg-blue-900 h-full shadow-lg text-gray-100 rounded-lg overflow-auto m-1\">\n      {/* conditional render based on edit button. */}\n      {isEdit === \"no\" ? (\n        // if edit mode is off, then display the the collections as is.\n        <section>\n          <div tw=\"flex flex-row justify-end py-1 px-2\">\n            <button\n              onClick={handleEditToggle}\n              tw=\"mx-1 p-1 rounded hover:text-white hover:font-semibold hover:p-1\"\n            >\n              edit\n            </button>\n            <button\n              onClick={() => handleRemoveCollection(collectionObj.id)}\n              tw=\"mx-1 p-1 rounded hover:text-white hover:font-semibold hover:p-1\"\n            >\n              delete\n            </button>\n          </div>\n          <div tw=\"flex flex-row justify-around pt-4 pb-12 px-2\">\n            <div tw=\"my-auto text-xl md:text-lg\">\n              <h3 tw=\"bg-purple-600 whitespace-pre-line rounded px-4 py-2 md:p-2 text-center font-bold text-lg sm:text-xl md:text-lg\">\n                {collectionObj.name}\n              </h3>\n            </div>\n            <div tw=\"w-2/3 my-auto text-center sm:text-lg md:text-base\">\n              <ul>\n                {collectionObj.pokemons.map(poke => (\n                  <li\n                    key={poke}\n                    tw=\"text-gray-900 font-semibold bg-gray-100 p-1 rounded m-1\"\n                  >\n                    {poke}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </section>\n      ) : (\n        // if edit mode is on, display an <input /> element in the place of collection name and\n        // display \"x\" buttons to delete pokemon from the collection.\n        // Also display a \"cancel\" and \"save\" button.\n        <div>\n          <section>\n            <div tw=\"flex flex-row justify-between py-1 px-2\">\n              <button\n                onClick={handleEditToggle}\n                tw=\"mx-1 p-1 rounded hover:text-white hover:font-semibold hover:p-1\"\n              >\n                cancel\n              </button>\n              <button\n                onClick={() => handleSave(collectionObj.id)}\n                tw=\"mx-1 p-1 rounded hover:text-white hover:font-semibold hover:p-1\"\n              >\n                save\n              </button>\n            </div>\n            <div tw=\"flex flex-row justify-around pt-4 pb-8 px-2\">\n              <div tw=\"my-auto text-xl md:text-lg\">\n                <input\n                  value={collectionName}\n                  onChange={handleCollectionNameChange}\n                  tw=\"bg-purple-600 whitespace-pre-line rounded px-1 py-4 md:p-2 text-center font-bold text-lg sm:text-xl md:text-lg\"\n                />\n              </div>\n              <div tw=\"w-2/3 my-auto text-center sm:text-lg md:text-base\">\n                <ul>\n                  {pokemonList.map(poke => (\n                    <li\n                      key={poke}\n                      tw=\"flex flex-row justify-between items-center text-gray-900 mx-4 font-semibold bg-gray-100 p-1 my-1 rounded\"\n                    >\n                      <p>{poke}</p>\n                      <button\n                        onClick={() => handleRemovePokemon(poke)}\n                        tw=\"font-semibold bg-red-800 m-1 px-2 py-1 rounded-full text-gray-100\"\n                      >\n                        x\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </section>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default CollectionCard\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React, { useState } from \"react\"\n\nimport CollectionCard from \"./components/CollectionCard\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { create, selectorCollection } from \"./collectionSlice\"\n\nconst Collection = () => {\n  const [collectionName, setCollectionName] = useState(\"\")\n  const dispatch = useDispatch()\n  const collection = useSelector(selectorCollection)\n\n  const handleCollectionCreation = e => {\n    e.preventDefault()\n    dispatch(create(collectionName))\n    setCollectionName(\"\")\n  }\n\n  return (\n    <div tw=\"p-2 md:p-4\">\n      <section tw=\"text-base md:text-lg lg:text-xl\">\n        <h3 tw=\"mx-1\"> Your Collection </h3>\n        <form onSubmit={handleCollectionCreation}>\n          <input\n            tw=\"rounded border border-purple-700 m-1\"\n            value={collectionName}\n            onChange={e => setCollectionName(e.target.value)}\n          />\n          <button\n            tw=\"bg-purple-700 hover:bg-purple-800 text-gray-200 hover:text-white rounded p-1 m-1\"\n            type=\"submit\"\n          >\n            create collection\n          </button>\n        </form>\n      </section>\n      <section tw=\"md:grid md:grid-cols-2 lg:grid-cols-3 md:gap-2\">\n        {collection.map(col => (\n          <CollectionCard key={col.id} collectionObj={col} />\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default Collection\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\n\nimport UserInfo from \"./UserInfo\"\nimport Collection from \"./Collection\"\n\nconst Home = () => {\n  return (\n    <div tw=\"flex flex-1 flex-col h-screen bg-blue-100\">\n      <UserInfo />\n      <Collection />\n    </div>\n  )\n}\n\nexport default Home\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\n// A constant that determines how many pokemon are fetched from the API.\nexport const NUMBER_OF_POKEMON = 25\n\n// URL for the get request.\nconst URL = `https://pokeapi.co/api/v2/pokemon?limit=${NUMBER_OF_POKEMON}`\n\n// We initialize 2 arrays. pokemonList is where we store all the pokemon fetched.\n// filteredPokemonList is where we store pokemon that match the search filter.\nconst initialState = {\n  pokemonList: [],\n  filteredPokemonList: [],\n}\n\n// A function that checks if a pokemon exists in an array.\nconst pokemonExists = (arr, val) => {\n  return arr.some(arrVal => val === arrVal)\n}\n\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    // Add a pokemon to the array. Pokemon is added only if it\n    // does not already exist in the state.\n    add: (state, action) => {\n      const existingPokeIds = state.pokemonList.map(poke => poke.id)\n      if (!pokemonExists(existingPokeIds, action.payload.id)) {\n        state.pokemonList.push(action.payload)\n      }\n    },\n    // Search for a pokemon in the pokemonList state. The matches are stored in the\n    // filteredPokemonList state.\n    search: (state, action) => {\n      const searchTerm = action.payload.searchTerm\n\n      // If the search term is empty, then pokemonList is\n      // returned.\n      if (searchTerm === \"\") {\n        state.filteredPokemonList = state.pokemonList\n      }\n\n      // Convert the searchTerm and existing pokemon to lowercase while searhcing.\n      const filteredList = state.pokemonList.filter(poke =>\n        poke.name.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n\n      // if searchTerm is not empty and no match is found, return \"xxx\".\n      // Else return the filtered list.\n      if (searchTerm !== \"\" && filteredList.length === 0) {\n        state.filteredPokemonList = [\"xxx\"]\n      } else {\n        state.filteredPokemonList = filteredList\n      }\n    },\n  },\n})\n\nexport const { add, search } = pokemonCardsSlice.actions\n\n// Async function to fetch pokemon.\n// We only fetch pokemon if they already don't exist in the state.\n// We do this so that a request is not made everytime we go to the explore page.\nexport const fetchPokemonNameUrl = () => {\n  return async (dispatch, getState) => {\n    // get state\n    const state = getState()\n\n    try {\n      // if length of pokemonList is not equal to NUMBER_OF_POKEMON, then fetch\n      // pokemon.\n      if (state.pokemon.pokemonList.length !== NUMBER_OF_POKEMON) {\n        const response = await axios.get(URL)\n        const data = response.data.results\n\n        // create a temp object for every pokemon fetched, extract all relevant\n        // details into it, and push it into the pokemonList state.\n        data.map(async poke => {\n          const responseDetails = await axios.get(poke.url)\n\n          let tempDetails = {\n            id: responseDetails.data.id,\n            name: responseDetails.data.species.name,\n            baseExperience: responseDetails.data.base_experience,\n            height: responseDetails.data.height,\n            weight: responseDetails.data.weight,\n            type: responseDetails.data.types[0].type.name,\n            sprites: responseDetails.data.sprites.front_default,\n          }\n\n          dispatch(add(tempDetails))\n        })\n      }\n    } catch (e) {\n      console.log(\"Could not fetch data.\")\n    }\n  }\n}\n\nexport const selectorPokemon = state => state.pokemon.pokemonList\nexport const selectorFilteredPokemon = state =>\n  state.pokemon.filteredPokemonList\n\nexport default pokemonCardsSlice.reducer\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React, { useState } from \"react\"\n\nimport { useDispatch } from \"react-redux\"\nimport { search } from \"./pokemonCardsSlice\"\n\nconst SearchPokemon = () => {\n  const dispatch = useDispatch()\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  // dispatch search action.\n  const handleSearchTermChange = e => {\n    setSearchTerm(e.target.value)\n    dispatch(search({ searchTerm: e.target.value }))\n  }\n\n  return (\n    <div tw=\"flex flex-row bg-blue-800 py-8 px-2 md:py-10 md:px-4\">\n      <section tw=\"text-lg md:text-xl\">\n        <h3 tw=\"text-white\"> Search Pokemon </h3>\n        <form>\n          <input\n            tw=\"rounded\"\n            value={searchTerm}\n            onChange={handleSearchTermChange}\n          />\n        </form>\n      </section>\n    </div>\n  )\n}\n\nexport default SearchPokemon\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled/macro\"\n\n// generating colours like this because twin.macro doesn't\n// support passing colours as strings\nconst generatePokeTypeColor = color => {\n  switch (color) {\n    case \"normal\":\n      return tw`bg-orange-700`\n    case \"fighting\":\n      return tw`bg-red-800`\n    case \"flying\":\n      return tw`bg-purple-600`\n    case \"poison\":\n      return tw`bg-pink-800`\n    case \"ground\":\n      return tw`bg-yellow-600`\n    case \"rock\":\n      return tw`bg-yellow-800`\n    case \"bug\":\n      return tw`bg-green-600`\n    case \"ghost\":\n      return tw`bg-purple-900`\n    case \"steel\":\n      return tw`bg-gray-600`\n    case \"fire\":\n      return tw`bg-orange-500`\n    case \"water\":\n      return tw`bg-blue-500`\n    case \"grass\":\n      return tw`bg-green-800`\n    case \"electric\":\n      return tw`bg-yellow-500`\n    case \"psychic\":\n      return tw`bg-pink-600`\n    case \"ice\":\n      return tw`bg-blue-300`\n    case \"dragon\":\n      return tw`bg-purple-400`\n    case \"dark\":\n      return tw`bg-orange-900`\n    case \"fairy\":\n      return tw`bg-pink-300`\n    case \"unknown\":\n      return tw`bg-gray-500`\n    case \"shadow\":\n      return tw`bg-gray-700`\n    default:\n      return tw`bg-white`\n  }\n}\n\n// generate a styled p tag with dynamic background colour.\nconst PokeTypeColorElement = styled.p`\n  ${({ color }) => generatePokeTypeColor(color)}\n`\nexport default PokeTypeColorElement\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nconst PokeFormForCollection = props => {\n  const {\n    collection,\n    pokemonId,\n    addPokemonToCollection,\n    pokemonCollectionInput,\n    handlePokemonToCollection,\n  } = props\n\n  return (\n    <div tw=\"mt-4\">\n      {/* A form to add pokemon to collections. */}\n      {/* We use select input for this. */}\n      <form onSubmit={addPokemonToCollection}>\n        <label>\n          <select\n            tw=\"rounded\"\n            value={pokemonCollectionInput.id}\n            onChange={handlePokemonToCollection}\n          >\n            {/* Options for this select input are generated dynamically from the state. */}\n            <option value={-1}>...</option>\n            {collection.map(clctn => (\n              <option key={`${clctn.id}-${pokemonId}`} value={Number(clctn.id)}>\n                {clctn.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <button\n          type=\"submit\"\n          tw=\"rounded border border-white text-gray-100 hover:bg-gray-100 hover:font-semibold hover:text-gray-900 px-4 py-1 ml-2\"\n        >\n          add\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default PokeFormForCollection\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\n// A component to display the pokemon attributes.\nconst PokeDetailsUI = props => {\n  const { keyAttribute, val } = props\n  return (\n    <p tw=\"flex flex-row justify-between my-2 p-1 bg-gray-800 rounded\">\n      <span tw=\"font-semibold text-gray-100 p-1 mx-2 rounded\">\n        {keyAttribute}\n      </span>\n      <span tw=\"font-semibold bg-gray-200 self-stretch text-gray-900 p-1 rounded\">\n        {val}\n      </span>\n    </p>\n  )\n}\n\nexport default PokeDetailsUI\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled/macro\"\n\nimport PokeTypeColorElement from \"./pokeTypeColor\"\nimport PokeFormForCollection from \"./PokeFormForCollection\"\nimport PokeDetailsUI from \"./PokeDetailsUI\"\n\nimport { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { add, selectorCollection } from \"../../home/collectionSlice\"\n\nconst PokemonCard = props => {\n  // access the collection state.\n  const collection = useSelector(selectorCollection)\n  const dispatch = useDispatch()\n\n  // extract details to render a pokemonCard component.\n  const {\n    pokemonId,\n    pokemonName,\n    pokemonType,\n    pokemonHeight,\n    pokemonWeight,\n    pokemonBaseExperience,\n    pokemonSprite,\n  } = props\n\n  // create a local state here to edit a collection. We can change the name of collection\n  // and pokemon in it.\n  const [pokemonCollectionInput, setPokemonCollectionInput] = useState({\n    id: \"\",\n    pokemon: \"\",\n  })\n\n  //\n  const handlePokemonToCollection = e => {\n    setPokemonCollectionInput({\n      ...pokemonCollectionInput,\n      id: Number(e.target.value),\n      pokemon: pokemonName,\n    })\n  }\n\n  // add pokemon to a collection.\n  const addPokemonToCollection = e => {\n    e.preventDefault()\n    setPokemonCollectionInput({\n      ...pokemonCollectionInput,\n      id: \"\",\n      pokemon: \"\",\n    })\n    dispatch(add(pokemonCollectionInput))\n  }\n\n  return (\n    <div tw=\"flex flex-row justify-around items-center bg-blue-800 p-2 rounded-lg overflow-x-auto\">\n      <div tw=\"flex flex-col flex-wrap w-1/3 m-1\">\n        <img\n          tw=\"object-contain transform sm:scale-125\"\n          alt={pokemonName}\n          src={pokemonSprite}\n        />\n        <p tw=\"bg-gray-100 text-gray-900 font-extrabold text-center whitespace-normal rounded p-1 m-1\">\n          {pokemonName}\n        </p>\n\n        <PokeTypeColorElement\n          tw=\"text-center text-white font-semibold text-center whitespace-normal rounded p-1 m-1\"\n          color={pokemonType}\n        >\n          {pokemonType}\n        </PokeTypeColorElement>\n      </div>\n      <div tw=\"flex flex-col items-center w-2/3\">\n        <div>\n          <PokeDetailsUI keyAttribute=\"height\" val={pokemonHeight} />\n          <PokeDetailsUI keyAttribute=\"weight\" val={pokemonWeight} />\n          <PokeDetailsUI keyAttribute=\"base-exp\" val={pokemonBaseExperience} />\n        </div>\n        <PokeFormForCollection\n          addPokemonToCollection={addPokemonToCollection}\n          pokemonCollectionInput={pokemonCollectionInput}\n          handlePokemonToCollection={handlePokemonToCollection}\n          collection={collection}\n          pokemonId={pokemonId}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonCard\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport PokemonCard from \"./components/PokemonCard\"\n\nimport { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  fetchPokemonNameUrl,\n  selectorFilteredPokemon,\n  selectorPokemon,\n} from \"./pokemonCardsSlice\"\n\nconst PokemonCards = () => {\n  const dispatch = useDispatch()\n  // A state array that contains all the pokemon fetched from the API.\n  const pokemonList = useSelector(selectorPokemon)\n  // A state array that contains an array of pokemon that match the search filter.\n  const filteredPokemonList = useSelector(selectorFilteredPokemon)\n\n  // Fetch pokemon by dispatching the action.\n  useEffect(() => {\n    dispatch(fetchPokemonNameUrl())\n  }, [dispatch])\n\n  return (\n    <div tw=\"p-2 md:p-4\">\n      <ul>\n        <div tw=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-2 md:gap-3 lg:gap-4\">\n          {/* If \"xxx\" is present in the 0th position of the state array, return \"No pokemon found.\" */}\n          {/* Else If \"xxx\" is not returned and the length of the state is 0, then return all the pokemon. */}\n          {/* Else return pokemon that match the search filter.*/}\n          {filteredPokemonList[0] === \"xxx\"\n            ? \"No Pokemon found.\"\n            : filteredPokemonList.length === 0\n            ? pokemonList.map(poke => (\n                <PokemonCard\n                  key={`key-${poke.id}`}\n                  pokemonId={poke.id}\n                  pokemonName={poke.name}\n                  pokemonType={poke.type}\n                  pokemonHeight={poke.height}\n                  pokemonWeight={poke.weight}\n                  pokemonBaseExperience={poke.baseExperience}\n                  pokemonSprite={poke.sprites}\n                />\n              ))\n            : filteredPokemonList.map(poke => (\n                <PokemonCard\n                  key={`key-${poke.id}`}\n                  pokemonId={poke.id}\n                  pokemonName={poke.name}\n                  pokemonType={poke.type}\n                  pokemonHeight={poke.height}\n                  pokemonWeight={poke.weight}\n                  pokemonBaseExperience={poke.baseExperience}\n                  pokemonSprite={poke.sprites}\n                />\n              ))}\n        </div>\n      </ul>\n    </div>\n  )\n}\n\nexport default PokemonCards\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport React from \"react\"\n\nimport SearchPokemon from \"./SearchPokemon\"\nimport PokemonCards from \"./PokemonCards\"\n\nconst Explore = () => {\n  return (\n    <div tw=\"flex flex-1 flex-col h-screen bg-blue-100\">\n      <SearchPokemon />\n      <PokemonCards />\n    </div>\n  )\n}\n\nexport default Explore\n","/** @jsx jsx */\r\n/** @jsxFrag React.Fragment */\r\nimport { jsx, css } from \"@emotion/core\"\r\nimport tw from \"twin.macro\"\r\nimport \"tailwindcss/dist/base.css\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useLocation,\r\n} from \"react-router-dom\"\r\n\r\nimport { selectorAuth } from \"./authSlice\"\r\n\r\nimport React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport Navbar from \"./components/Navbar\"\r\nimport Landing from \"./features/landing/Landing\"\r\nimport Home from \"./features/home/Home\"\r\nimport Explore from \"./features/explore/Explore\"\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const authState = useSelector(selectorAuth)\r\n  const location = useLocation()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (authState.isUserLoggedIn) {\r\n          return <Component {...props} />\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: {\r\n                  from: location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div tw=\"flex flex-col bg-green-100 min-h-screen\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <ProtectedRoute path=\"/home\" component={Home} />\r\n          <ProtectedRoute path=\"/explore\" component={Explore} />\r\n          <Route path=\"*\" component={() => \"404 Not found.\"} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport collectionReducer from \"../features/home/collectionSlice\"\r\nimport pokemonCardsReducer from \"../features/explore/pokemonCardsSlice\"\r\nimport authSlice from \"../authSlice\"\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    collection: collectionReducer,\r\n    pokemon: pokemonCardsReducer,\r\n    auth: authSlice,\r\n  },\r\n})\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport store from \"./app/store\"\r\nimport { Provider } from \"react-redux\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}